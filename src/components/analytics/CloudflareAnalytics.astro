---
// Cloudflare Analytics component
// This component handles the loading of Cloudflare Web Analytics
// It respects user consent settings and handles loading errors gracefully

import { shouldLoadAnalytics, cloudflareConfig } from '../../config/analytics';

// Only load if analytics should be loaded (based on environment and config)
const loadAnalytics = shouldLoadAnalytics() && cloudflareConfig.enabled;
const { token, respectDoNotTrack } = cloudflareConfig;
---

{loadAnalytics && (
  <script define:vars={{ token, respectDoNotTrack }}>
    // Only load Cloudflare analytics if consent is given
    window.addEventListener('consentUpdated', (event) => {
      const { analytics } = event.detail;
      
      // If analytics consent is given but Cloudflare script isn't loaded yet
      if (analytics && !document.querySelector('script[data-cf-beacon]')) {
        // Check Do Not Track setting if configured to respect it
        if (
          respectDoNotTrack && 
          (navigator.doNotTrack === '1' || 
           navigator.doNotTrack === 'yes' || 
           window.doNotTrack === '1')
        ) {
          console.log('Respecting Do Not Track setting - Cloudflare Analytics not loaded');
          return;
        }
        
        // Create the Cloudflare Web Analytics script
        const script = document.createElement('script');
        script.defer = true;
        script.setAttribute('data-cf-beacon', JSON.stringify({
          token: token,
          spa: false
        }));
        
        // Add error handling
        script.onerror = () => {
          console.warn('Cloudflare Web Analytics failed to load');
          // Remove the script to prevent further errors
          script.remove();
        };
        
        // Load the script with retry logic
        const loadScript = (retries = 3) => {
          script.src = 'https://static.cloudflareinsights.com/beacon.min.js';
          document.head.appendChild(script);
          
          // Set up retry logic
          script.onerror = () => {
            if (retries > 0) {
              // Remove the failed script
              script.remove();
              // Wait 2 seconds before retrying
              setTimeout(() => loadScript(retries - 1), 2000);
            } else {
              console.warn('Cloudflare Web Analytics failed to load after multiple attempts');
            }
          };
        };
        
        // Start loading
        loadScript();
      }
    });
    
    // Check if consent is already given
    if (window.glsConsent && window.glsConsent.hasAnalyticsConsent()) {
      // Dispatch the event to trigger the loading
      window.dispatchEvent(new CustomEvent('consentUpdated', { 
        detail: { 
          analytics: true, 
          ads: window.glsConsent.hasAdsConsent ? window.glsConsent.hasAdsConsent() : false 
        } 
      }));
    }
  </script>
)}