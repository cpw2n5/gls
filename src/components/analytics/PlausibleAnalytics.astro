---
import { plausibleConfig, shouldLoadAnalytics } from '../../config/analytics';

// Only load if analytics should be loaded (based on environment and config)
const loadAnalytics = shouldLoadAnalytics();

// Get the script properties from config
const { scriptProps } = plausibleConfig;
---

{loadAnalytics && (
  <script 
    src="https://plausible.io/js/plausible.js"
    {...scriptProps}
  ></script>
)}

<script lang="ts">
  // Declare the trackEvent property on Window

  // Listen for consent updates
  window.addEventListener('consentUpdated', (event) => {
    const { analytics } = event.detail;
    
    // If analytics consent is given but analytics script isn't loaded yet
    if (analytics && !document.querySelector('script[src*="plausible.io"]')) {
      // Dynamically add the Plausible script
      const script = document.createElement('script');
      script.src = 'https://plausible.io/js/plausible.js';
      
      // Add all configured script properties
      const scriptProps = {
        defer: true,
        'data-domain': 'getlifesorted.com',
      };
      
      Object.entries(scriptProps).forEach(([key, value]) => {
        if (typeof value === 'boolean' && value) {
          script.setAttribute(key, '');
        } else if (value) {
          script.setAttribute(key, String(value));
        }
      });
      
      document.head.appendChild(script);
    }
  });
  
  // Custom event tracking helper
  window.trackEvent = (eventName, props = {}) => {
    // Check if consent is given and Plausible is loaded
    if (window.glsConsent?.hasAnalyticsConsent() && window.plausible) {
      window.plausible(eventName, { props });
    }
  };
</script>