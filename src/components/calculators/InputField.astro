---
interface Props {
  id: string;
  label: string;
  type: 'text' | 'number' | 'select' | 'radio' | 'checkbox';
  defaultValue?: string | number | boolean;
  required?: boolean;
  min?: number;
  max?: number;
  step?: number;
  options?: Array<{
    label: string;
    value: string | number;
  }>;
  className?: string;
}

const {
  id,
  label,
  type,
  defaultValue,
  required = false,
  min,
  max,
  step,
  options = [],
  className = '',
} = Astro.props;
---

<div class={`mb-4 ${className}`}>
  <label for={id} class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
    {label}
    {required && <span class="text-red-500">*</span>}
  </label>

  {type === 'text' && (
    <input
      type="text"
      id={id}
      name={id}
      value={defaultValue?.toString() || ''}
      required={required}
      class="w-full px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-800"
    />
  )}

  {type === 'number' && (
    <input
      type="number"
      id={id}
      name={id}
      value={defaultValue?.toString() || ''}
      min={min}
      max={max}
      step={step}
      required={required}
      class="w-full px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-800"
    />
  )}

  {type === 'select' && (
    <select
      id={id}
      name={id}
      required={required}
      class="w-full px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-800"
    >
      {options.map((option) => (
        <option 
          value={option.value.toString()} 
          selected={option.value === defaultValue}
        >
          {option.label}
        </option>
      ))}
    </select>
  )}

  {type === 'checkbox' && (
    <div class="flex items-center">
      <input
        type="checkbox"
        id={id}
        name={id}
        checked={defaultValue === true}
        class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 dark:border-gray-700 rounded"
      />
      <label for={id} class="ml-2 block text-sm text-gray-700 dark:text-gray-300">
        {label}
      </label>
    </div>
  )}

  {type === 'radio' && (
    <div class="space-y-2">
      {options.map((option) => (
        <div class="flex items-center">
          <input
            type="radio"
            id={`${id}-${option.value}`}
            name={id}
            value={option.value.toString()}
            checked={option.value === defaultValue}
            class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 dark:border-gray-700"
          />
          <label for={`${id}-${option.value}`} class="ml-2 block text-sm text-gray-700 dark:text-gray-300">
            {option.label}
          </label>
        </div>
      ))}
    </div>
  )}
</div>